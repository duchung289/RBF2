{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","id","name","email","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAiBeA,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAE7B,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCMXK,EAdF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OAEI,sBAAKP,UAAU,yCAAf,UAEI,qBAAKQ,IAAI,QAAQC,IAAG,+BAA0BJ,EAA1B,cACpB,gCACI,6BAAKC,IACL,4BAAIC,WCcLG,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAIf,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEAT,GAAIM,EAAOG,GAAGT,GACdC,KAAMK,EAAOG,GAAGR,KAChBC,MAAOI,EAAOG,GAAGP,OAHZI,EAAOG,GAAGT,UCJpBU,EATA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACKJ,EAAMK,YCgBJC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,wDAEJG,KAAKX,MAAMK,a,GAhBEQ,aCmDbC,G,wDA3CX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GAEd,EAAKJ,SAAS,CAAC9B,YAAakC,EAAMC,OAAOC,SAfzC,EAAKX,MAAQ,CACTZ,OAAQ,GACRb,YAAa,IAJR,E,qDASb,WAAqB,IAAD,OAChBqC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACjB,OAAQ4B,S,oBAS9C,WACI,MAA8BZ,KAAKJ,MAA5BZ,EAAP,EAAOA,OAAQb,EAAf,EAAeA,YACT0C,EAAiB7B,EAAO8B,QAAO,SAAAC,GACjC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAAS9C,EAAY6C,kBAEzD,OAAQhC,EAAOkC,OAGP,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAgB4B,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUpB,OAAQ6B,WAPlC,iD,GA5BMX,cCGHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAEjDX,M","file":"static/js/main.ff0cc52d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SearchBox = ({searchfield, searchChange}) => {\n     \n    return(\n        <div className='pa2'>   \n            <input \n                className='pa3 ba b--green bg-lightest-blue'\n                type='search' \n                placeholder='search robots'\n                onChange={searchChange}\n                />\n        </div>\n    )\n    \n}\n\nexport default SearchBox","import React from 'react';\n\nconst Card = ({id, name, email}) => {\n    return(\n        \n        <div className='tc bg-light-green dib br3 pa3 ma2 grow'>\n            \n            <img alt='robot' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n// import {robots} from './robots';\n\n\nconst CardList = ({robots}) => {\n    // if (true) {\n    //     throw new Error('NOOO')\n    // }\n    return (\n        <div>\n            {\n            robots.map((user,i) => {\n                return (\n                    <Card  \n                    key={robots[i].id} \n                    id={robots[i].id} \n                    name={robots[i].name} \n                    email={robots[i].email}/>);\n            })}\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst Scroll = (props) => {\n    // console.log(props.children)\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height:'500px'}}>\n            {props.children}\n        </div>\n    ) \n}\n\nexport default Scroll\n","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info){\n        this.setState({hasError: true})\n    }\n\n    render(){\n        if (this.state.hasError) {\n            return <h1>Oops. This is no good!</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary\n","import React, {Component} from 'react';\n// import {robots} from './robots';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nimport './App.css'\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n        // console.log('constructor')\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({robots: users}));\n    }\n\n    onSearchChange = (event) => {\n        // console.log('onSearchChange');\n        this.setState({searchfield: event.target.value});\n        \n    }\n\n    render(){\n        const {robots, searchfield} = this.state\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !robots.length?\n            <h2>LOADING ...</h2>:\n            (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange = {this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            );\n    }\n    \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App /> ,document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}